<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<security:http auto-config="false" entry-point-ref="authenticationEntryPoint">	<!-- 取消自动配置 -->
		<security:remember-me 
			remember-me-parameter="remember" 
			key="mldn-lixinghua" 
			token-validity-seconds="2592000"
			remember-me-cookie="mldn-rememberme-cookie"
			data-source-ref="dataSource"/>
		<security:session-management invalid-session-url="/loginPage.action">
			<security:concurrency-control 
				max-sessions="1" 
				error-if-maximum-exceeded="false" 
				expired-url="/logoffPage.action"/>
		</security:session-management>
		<!-- 定义授权检测失败时的显示页面，一旦出现拒绝访问时将自动进行跳转 --> 
		<security:access-denied-handler error-page="/WEB-INF/pages/error_page_403.jsp"/>
		<!-- 定义要拦截的路径，可以是具体路径也可以使用路径匹配符设置要拦截的父路径 -->
		<!-- 表达式“hasRole()”表示的是拥有此角色的用户才可以进行访问，如果没有认证过或没有角色的用户无法访问 -->  
		<security:intercept-url pattern="/pages/info/**" access="hasRole('ADMIN')"/>   
		<security:intercept-url pattern="/pages/message/**" access="hasRole('USER')"/>
		<!-- 登录成功后的首页，需要在用户已经认证后才可以显示 -->
		<security:intercept-url pattern="/welcome.action" access="isAuthenticated()"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:custom-filter ref="validatorCodeFilter" before="FORM_LOGIN_FILTER"/> 
		<security:csrf disabled="true"/>		<!-- 关闭CSRF校验 -->
		<security:logout 
			logout-url="/mldn-logout" 
			logout-success-url="/logoutPage.action" 
			delete-cookies="JSESSIONID"/>
	</security:http>

	<!-- 定义登录路径认证作为处理终端 -->
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg index="0" value="/loginPage.action"/>
	</bean>  

	<!-- 自定义新的过滤器，设置好登录路径，表单参数名称 -->
	<bean id="validatorCodeFilter"
		class="cn.mldn.mldnspring.filter.ValidatorCodeUsernamePasswordAuthenticationFilter">
		<property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler" />
		<property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="filterProcessesUrl" value="/mldn-login"/>
		<property name="usernameParameter" value="mid"/>
		<property name="passwordParameter" value="pwd"/>
	</bean>
	<!-- 定义登录成功页面的处理 -->
	<bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/welcomePage.action" />
	</bean> 
	<!-- 登录失败跳转路径处理 -->
	<bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/loginPage.action?error=true" />
	</bean> 
		
	
	
	<security:authentication-manager id="authenticationManager">			<!-- 定义认证管理器 -->
		<security:authentication-provider user-service-ref="userDetailsService"/>
	</security:authentication-manager> 
</beans>
