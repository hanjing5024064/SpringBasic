<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<security:http auto-config="true">	<!-- 启用HTTP安全认证，并且采用自动配置模式 -->
		<!-- 定义授权检测失败时的显示页面，一旦出现拒绝访问时将自动进行跳转 --> 
		<security:access-denied-handler error-page="/WEB-INF/pages/error_page_403.jsp"/>
		<!-- 定义要拦截的路径，可以是具体路径也可以使用路径匹配符设置要拦截的父路径 -->
		<!-- 表达式“hasRole()”表示的是拥有此角色的用户才可以进行访问，如果没有认证过或没有角色的用户无法访问 -->  
		<security:intercept-url pattern="/pages/info/**" access="hasRole('ADMIN')"/>   
		<security:intercept-url pattern="/pages/message/**" access="hasRole('USER')"/>
		<!-- 登录成功后的首页，需要在用户已经认证后才可以显示 -->
		<security:intercept-url pattern="/welcome.action" access="isAuthenticated()"/>
		<security:csrf disabled="true"/>		<!-- 关闭CSRF校验 -->
		<security:form-login 
			username-parameter="mid" 
			password-parameter="pwd"
			authentication-success-forward-url="/welcomePage.action" 
			login-page="/loginPage.action" 
			login-processing-url="/mldn-login"
			authentication-failure-forward-url="/login.action?error=true"/>
		<security:logout 
			logout-url="/mldn-logout" 
			logout-success-url="/logoutPage.action" 
			delete-cookies="JSESSIONID"/>
	</security:http>   
	<security:authentication-manager>			<!-- 定义认证管理器 -->
		<security:authentication-provider>		<!-- 配置认证管理配置类 -->
			<security:jdbc-user-service 
				data-source-ref="dataSource" 
				users-by-username-query="SELECT mid AS username,password,enabled FROM member WHERE mid=?"
				authorities-by-username-query="SELECT mid AS username,rid AS authorities FROM member_role WHERE mid=?"/>
		</security:authentication-provider>
	</security:authentication-manager> 
</beans>
